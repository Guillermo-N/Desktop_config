---
# tasks file for oh-my-zsh

# Creates the string for configure plugins in .zshrc
- name: Creatting plugins entry for .zshrc
  set_fact:
    plugins_replacement: "plugins=(git {{ plugins_repos | map(attribute='repo') | join(' ') }})"

# Instlal the requirement zsh
- name: Install zsh
  ansible.builtin.dnf:
    name: zsh
    state: latest
  become: true
  become_user: root
  notify: User shell to ZSH

# Download the installation script
- name: Download oh-my-zsh install script
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: /tmp/oh-my-zsh_install.sh
    #checksum: sha256:b5bb9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c
  notify: Cleaning install script

# Runs the installation script
- name: Run installation script
  ansible.builtin.command:
    cmd: sh /tmp/oh-my-zsh_install.sh
  register: command_result

- name: Print return of Installation
  debug:
    msg: "Installation script return code: {{ command_result.rc }}"
  changed_when: command_result.rc == 0

- name: Check if .zshrc exists
  ansible.builtin.stat:
    path: "{{ zshrc_file }}"
  register: file_info

- name: If installation went well
  block:

    - name: Select prompt theme
      ansible.builtin.lineinfile:
        path: "{{ zshrc_file }}"
        regex: '^ZSH_THEME="robbyrussell"'
        line: 'ZSH_THEME="{{ prompt_theme }}"'

    - name: Check for .oh-my-posh dir
      ansible.builtin.stat:
        path: "{{ ohmyzsh_config_dir }}"
      register: dir_info

    - name: Clonning plugins
      ansible.builtin.git:
        repo: "{{ item.url }}"
        dest: "{{ ohmyzsh_plugin_dir }}/{{ item.repo }}"
      loop: "{{ plugins_repos }}"
      when: dir_info.stat.exists
      notify: Plugins into .zshrc

  when: file_info.stat.exists and command_result.rc == 0

# Check status of the instalatoin script
# - name: Print return of Installation
#   debug:
#     msg: "Installation script return code: {{ command_result.rc }}"
#   changed_when: command_result.rc == 0
#   notify: 
#     - Clonning plugins
#     - Plugins into .zshrc
